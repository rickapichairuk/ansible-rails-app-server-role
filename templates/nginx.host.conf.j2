upstream puma {
  server unix:{{app_shared_dir}}/tmp/sockets/puma.sock fail_timeout=0;
}

server {
  listen 81;

  location = api/v1/oauth/preflight {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://puma/api/v1/oauth/preflight;
  }

  rewrite ^ https://{{rails.default_host}}$request_uri? permanent;
}

server {
  listen 80 default deferred;

  if ($http_x_forwarded_proto = "http") {
    rewrite ^(.*)$ https://{{rails.default_host}}$1 permanent;
  }

  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  root {{app_public_dir}};

  try_files $uri/maintenance.html $uri/index.html $uri @puma;

  location /basic_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  location @puma {
    proxy_set_header X-Url-Scheme $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-For-Forwarded-Proto $https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://puma;
  }

  location ~ ^/(assets)/  {
    root {{app_public_dir}};
    gzip_static on;
    expires     off;
    add_header  Cache-Control "public, max-age=315360000";

    if ($http_origin ~* (https?://{{rails.default_host}})$) {
      set $cors "true";
    }

    if ($cors) {
      add_header  'Access-Control-Allow-Origin' '$http_origin';
      add_header  Vary Origin;
    }
  }

  location = /favicon.ico {
    expires    max;
    add_header Cache-Control public;
  }

  # From https://easyengine.io/tutorials/nginx/status-page/
  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  error_page 500 502 503 504 /500.html;
  error_page 404 /404.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}
